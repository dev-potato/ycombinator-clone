{"version":3,"sources":["utils/getSiteHostname.js","utils/getArticleLink.js","components/ListItem/styles.js","components/ListItem/index.js","components/List/styles.js","components/List/index.js","styles/palette.js","components/App/styles.js","styles/mediaQueries.js","services/Api.js","services/hackerNewsApi.js","store/story/actions.js","store/story/selectors.js","components/Loader/styles.js","components/Loader/index.js","components/App/App.js","styles/globals.js","serviceWorker.js","store/app/actions.js","store/app/reducer.js","store/story/reducer.js","store/reducer.js","store/middlewares.js","store/index.js","index.js"],"names":["getSiteHostname","siteUrl","hostname","includes","concat","url","parse","split","HN_ROOT","HN_ITEM","HN_USER","getArticleLink","_ref","id","commentUrl","Item","styled","li","_templateObject","theme","border","Title","h3","_templateObject2","_ref2","text","Host","span","_templateObject3","_ref3","textSecondary","ExternalLink","a","_templateObject4","_ref4","Description","div","_templateObject5","_ref5","CommentLink","_templateObject6","_ref6","_ref7","timeago","Timeago","LINK_REL","ListItem","by","_ref$kids","kids","score","title","time","type","site","link","userUrl","react_default","createElement","href","rel","target","format","Date","toISOString","length","ListWrapper","ul","styles_templateObject","backgroundSecondary","List","stories","map","story","components_ListItem","Object","assign","key","colorsDark","background","colorsLight","backgroun","Wrapper","App_styles_templateObject","h1","styles_templateObject2","SubTitle","styles_templateObject3","API_ROOT","process","URL","TIMEOUT","HEADERS","Content-Type","Accept","client","ApiService","_ref$baseURL","baseURL","_ref$timeout","timeout","_ref$headers","headers","auth","classCallCheck","this","axios","create","interceptors","response","use","handleSuccess","handleError","error","Promise","reject","path","get","then","data","payload","post","put","patch","delete","hackerNewsApi","getTopStoryIds","getStory","getStoriesByPage","page","_getPageSlice","limit","arguments","undefined","begin","end","getPageSlice","storyPromises","items","slice","getPageValues","all","NS","actionTypes","FETCH_STORY_IDS_REQUEST","FETCH_STORY_IDS_SUCCESS","FETCH_STORY_IDS_FAILURE","FETCH_STORIES_REQUEST","FETCH_STORIES_SUCCESS","FETCH_STORIES_FAILURE","action","actions","fetchStoryIds","dispatch","storyIds","fetchStories","catch","err","hasMoreStoriesSelector","createSelector","state","blink","keyframes","Loader_styles_templateObject","Animation","Loader_styles_templateObject2","Loader","App","color","_this$props","_this","props","isFetching","toggleTheme","setState","fetchStoriesFirstPage","_this$props2","hasMoreStories","styled_components_browser_esm","styles_Title","onClick","react_infinite_scroll_component_lib_default","dataLength","next","hasMore","loader","components_Loader","style","height","overflow","components_List","Component","connect","setGlobalStyles","injectGlobal","globals_templateObject","Boolean","window","location","match","SET_THEME","app","objectSpread","toConsumableArray","rootReducer","combineReducers","middlewareList","push","thunk","middleware","compose","applyMiddleware","apply","configureStore","initialState","createStore","reducer","store","ReactDOM","render","es","components_App_App","document","getElementById","renderApp","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9ee4fe50.chunk.js","sourcesContent":["import url from 'url';\n\nconst getSiteHostname = siteUrl => {\n  let hostname = '';\n\n  if (siteUrl) {\n    if (!siteUrl.includes('//')) {\n      siteUrl = `http://${siteUrl}`;\n    }\n\n    hostname = url.parse(siteUrl).hostname;\n  }\n\n  if (hostname.includes('www.')) {\n    hostname = hostname.split('www.')[1];\n  }\n\n  return hostname;\n};\n\nexport default getSiteHostname;","const HN_ROOT = 'https://news.ycombinator.com';\nexport const HN_ITEM = `${HN_ROOT}/item?id=`;\nexport const HN_USER = `${HN_ROOT}/user?id=`;\n\nconst getArticleLink = ({ url, id }) => {\n  const commentUrl = `${HN_ITEM}${id}`;\n  const link = !!url ? url : commentUrl;\n\n  return link;\n};\n\nexport default getArticleLink;","import styled from 'styled-components';\n\nexport const Item = styled.li`\n    border-bottom: 1px solid ${({ theme }) =>  theme.border};\n    padding: 14px 24px;\n\n    &:last-child {\n        border-bottom: none;\n    }\n`;\n\nexport const Title = styled.h3`\n    color: ${({ theme }) => theme.text};\n    margin-top: 0;\n    margin-bottom: 6px;\n    font-weight: 400;\n    font-size: 16px;\n    letter-spacing: 0.4px;\n`;\n\nexport const Host = styled.span`\n    color: ${({ theme }) => theme.textSecondary};\n    font-size: 12px;\n`;\n\nexport const ExternalLink = styled.a`\n    color: ${({ theme }) => theme.text};\n    display: flex;\n    width: 100%;\n    height: 100%;\n    flex-direction: row;\n    align-items: center;\n    text-decoration: none;\n`;\n\nexport const Description = styled.div`\n    font-size: 14px;\n    color: ${({ theme }) => theme.textSecondary};\n`;\n\nexport const CommentLink = styled.a`\n    color: ${({ theme }) => theme.textSecondary};\n    \n    &visited {\n        color: ${({ theme }) => theme.textSecondary};\n    }\n`;","import React from 'react';\nimport Timeago from 'timeago.js'\nimport getSiteHostname from '../../utils/getSiteHostname';\nimport getArticleLink, { HN_USER, HN_ITEM } from '../../utils/getArticleLink';\n\nimport { Item, Title, Host, ExternalLink, Description, CommentLink } from './styles';\n\nconst timeago = Timeago();\nconst LINK_REL = 'nofollow noreferrer noopener';\n\nconst ListItem = ({by, kids = [], score, url, title, id, type, time}) => {\n    const site = getSiteHostname(url)||'new.ycombinator.com';\n    const link = getArticleLink({ url, id});\n    const commentUrl = `${HN_ITEM}${id}`;\n    const userUrl = `${HN_USER}${by}`;\n    return(\n        <Item>\n            <ExternalLink href={link} rel={LINK_REL} target=\"_blank\">\n                <Title>\n                    {title} <Host>({site})</Host>\n                </Title>\n            </ExternalLink>\n            <Description>\n                {score} points by(' ')\n                <CommentLink href={userUrl} rel={LINK_REL} target='_blank'>\n                    {by}\n                </CommentLink>{' '}\n                    {timeago.format(new Date(time * 1000).toISOString())} {' | '}\n                <CommentLink href={commentUrl} rel={LINK_REL} target='_blank'>\n                    {kids.length} Comments\n                </CommentLink>\n            </Description>\n        </Item>\n    );\n};\n\nexport default ListItem;","import styled from 'styled-components';\n\nexport const ListWrapper = styled.ul`\n    background-color: ${({ theme }) => theme.backgroundSecondary};\n    border-radius: 4px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 20px;\n    display: flex;\n    flex-direction: column;\n`;","import React from 'react';\nimport ListItem from '../ListItem';\nimport { ListWrapper } from './styles'\n\nconst List = ( {stories} ) => (\n    <ListWrapper>\n        { stories.map( story => (\n            <ListItem key={story.id} {...story}/> \n        ))}\n    </ListWrapper>\n)\n\nexport default List;","export const colorsDark = {\n    background: '#272727',\n    backgroundSecondary: '#393C3E',\n    text: '#bfbebe',\n    textSecondary: '#848886',\n    border: '#272727',\n};\n\nexport const colorsLight = {\n    backgroun: '#EAEAEA',\n    backgroundSecondary: '#F8F8F8',\n    text: '#848886',\n    textSecondary: '#aaaaaa',\n    border: '#EAEAEA'\n};","import styled from 'styled-components';\nimport { tablet } from 'styles/mediaQueries';\n\nexport const Wrapper = styled.div`\n    width: 85%;\n    margin-left: auto;\n    margin-right: auto;\n    height: 100%;\n    overflow: hidden;\n    padding-bottom: 200px;\n\n    ${tablet} {\n        width: 96%;\n    }\n`;\n\nexport const Title = styled.h1`\n    color: ${ ({ theme }) => theme.textSecondary};\n    font-size: 20px;\n    font-weight: 300;\n    margin-top: 24px;\n`\n\nexport const SubTitle = styled.h3`\n    color: ${({ theme }) => theme.textSecondary};\n    font-size: 12px;\n    font-weight: 200;\n    margin-top: -10px;\n    margin-left: 40px;\n    margin-bottom: 26px;\n`","export const mobile = '@media only screen and (max-width: 480px)';\nexport const tablet = '@media only screen and (max-width: 768px)';\nexport const desktop = '@media only screen and (max-width: 1400px)';","import axios from 'axios'\n\n// Default API will be your root\nconst API_ROOT = process.env.URL || 'http://localhost:3000/';\nconst TIMEOUT = 20000;\nconst HEADERS = {\n  'Content-Type': 'application/json',\n  Accept: 'application/json',\n};\n\nclass ApiService {\n  constructor({ baseURL = API_ROOT, timeout = TIMEOUT, headers = HEADERS, auth }) {\n    const client = axios.create({\n      baseURL,\n      timeout,\n      headers,\n      auth,\n    });\n\n    client.interceptors.response.use(this.handleSuccess, this.handleError);\n    this.client = client;\n  }\n\n  handleSuccess(response) {\n    return response;\n  }\n\n  handleError(error) {\n    return Promise.reject(error);\n  }\n\n  get(path) {\n    return this.client.get(path).then(response => response.data);\n  }\n\n  post(path, payload) {\n    return this.client.post(path, payload).then(response => response.data);\n  }\n\n  put(path, payload) {\n    return this.client.put(path, payload).then(response => response.data);\n  }\n\n  patch(path, payload) {\n    return this.client.patch(path, payload).then(response => response.data);\n  }\n\n  delete(path) {\n    return this.client.delete(path).then(response => response.data);\n  }\n}\n\nexport default ApiService;","import ApiService from './Api';\n\nconst JSON_QUERY = '.json?print=pretty';\nconst BASE_URL = 'https://hacker-news.firebaseio.com/v0';\nconst client = new ApiService({ baseURL: BASE_URL });\n\nconst hackerNewsApi = {};\nconst PAGE_LIMIT = 20;\n\nconst getPageSlice = (limit, page = 0) => ({begin: page * limit, end: (page + 1) * limit});\nconst getPageValues = ({begin, end, items}) => items.slice(begin, end);\n\nhackerNewsApi.getTopStoryIds = () => client.get(`/topstories${JSON_QUERY}`);\nhackerNewsApi.getStory = id => client.get(`/item/${id}/${JSON_QUERY}`);\nhackerNewsApi.getStoriesByPage = (id, page) => {\n    const {begin, end} = getPageSlice(PAGE_LIMIT, page);\n    const activeIds = getPageValues({ begin, end, items: id });\n    const storyPromises = activeIds.map(id => hackerNewsApi.getStory(id));\n    return Promise.all(storyPromises);\n};\n\nexport default hackerNewsApi;","import hackerNewsApi from '../../services/hackerNewsApi';\n\nconst NS = '@hackerNewsReader/story';\n\nexport const actionTypes = {\n    FETCH_STORY_IDS_REQUEST: `${NS}/FETCH_STORY_IDS_REQUEST`,\n    FETCH_STORY_IDS_SUCCESS: `${NS}/FETCH_STORY_IDS_SUCCESS`,\n    FETCH_STORY_IDS_FAILURE: `${NS}/FETCH_STORY_IDS_FAILURE`,\n    FETCH_STORIES_REQUEST: `${NS}/FETCH_STORIES_REQUEST`,\n    FETCH_STORIES_SUCCESS: `${NS}/FETCH_STORIES_SUCCESS`,\n    FETCH_STORIES_FAILURE: `${NS}/FETCH_STORIES_FAILURE`,\n};\n\nconst action = (type, payload) => ({type, payload});\n\nconst actions = {\n    fetchStoryIds: (payload = {}) => {\n        return dispatch => {\n            dispatch(action(actionTypes.FETCH_STORY_IDS_REQUEST, payload));\n\n            return hackerNewsApi\n                .getTopStoryIds()\n                .then(storyIds => {\n                    dispatch(action(actionTypes.FETCH_STORY_IDS_SUCCESS, {storyIds}));\n                    dispatch(actions.fetchStories({ storyIds, page: 0}));\n                    return storyIds;\n                })\n                .catch(err => dispatch(action(actionTypes.FETCH_STORY_IDS_FAILURE, err)));\n        };\n    },\n    fetchStories: (payload = {}) => {\n        return dispatch => {\n            const { storyIds, page } = payload;\n\n            dispatch(action(actionTypes.FETCH_STORIES_REQUEST, payload));\n\n            return hackerNewsApi\n                .getStoriesByPage(storyIds, page)\n                .then(stories => dispatch(action(actionTypes.FETCH_STORIES_SUCCESS, { stories })))\n                .catch(err => dispatch(action(actionTypes.FETCH_STORIES_FAILURE, err)));\n        };\n    },\n};\n\nexport default actions;","import { createSelector } from 'reselect';\n\nconst storyIdsSeletor = state => state.story.storyIds;\nconst storiesSelector = state => state.story.stories;\n\nexport const hasMoreStoriesSelector = createSelector(\n    storyIdsSeletor,\n    storiesSelector,\n    (storyIds, stories) => storyIds.length > stories.length,\n);","import styled, { keyframes } from 'styled-components';\n\nconst blink = keyframes`\n    0% {\n        opacity: 0.2;\n    }\n\n    20% {\n        opacity: 1;\n    }\n\n    100% {\n        opacity: 0.2;\n    }\n`;\n\nexport const Animation = styled.div`\n    text-alight: center;\n\n    span {\n        color: ${({ theme }) => theme.textSecondary};\n        display: inline-block;\n        margin-left: 4px;\n        margin-right: 4px;\n        font-size: 80px;\n        line-height: 0.1;\n        animation-name: ${blink};\n        animation-duration: 1s;\n        animation-iteration-count: infinite;\n        animation-fill-mode: both;\n    }\n\n    span:nth-child(2) {\n        animation-delay: 0.2s;\n    }\n\n    span:nth-child(3) {\n        animation-delay: 0.4s;\n    }\n`;","import React from 'react';\n\nimport { Animation } from './styles';\n\nconst Loader = () => (\n    <Animation>\n        <span>.</span>\n        <span>.</span>\n        <span>.</span>\n    </Animation>\n)\n\nexport default Loader;","import React, { Component } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport List from '../List';\nimport { colorsDark, colorsLight } from '../../styles/palette';\nimport { Wrapper, Title, SubTitle } from './styles';\nimport {connect} from 'react-redux'\nimport actions from '../../store/story/actions'\nimport { hasMoreStoriesSelector } from '../../store/story/selectors'\n\nimport Loader from '../Loader/index';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nclass App extends Component {\n    \n  state = {\n    color: false\n  }\n    componentDidMount() {\n        this.props.fetchStoriesFirstPage();\n    }\n\n    fetchStories = () => {\n      const { storyIds, page, isFetching } = this.props;\n      if(!isFetching) {\n        this.props.fetchStories({ storyIds, page });\n      }\n    }\n\n    toggleTheme = () => {\n      this.setState({\n        color: !this.state.color\n      })\n    }\n\n  render() {\n      const { stories, hasMoreStories } = this.props;\n    return (\n      <ThemeProvider theme={(!this.state.color) ? colorsDark : colorsLight}>\n        <div>\n            <Wrapper>\n                <Title>Hacker News Clone (Y Combinator)</Title>\n                <SubTitle>Now with Infinite Scroll!</SubTitle>\n                <button onClick={this.toggleTheme}>Toggle Theme</button>\n                <InfiniteScroll\n                  dataLength={stories.length}\n                  next={this.fetchStories}\n                  hasMore={hasMoreStories}\n                  loader={<Loader />}\n                  style={{\n                    height: '100%',\n                    overflow: 'visible',\n                  }}\n                >\n                  <List stories={stories} />\n                </InfiniteScroll>\n            </Wrapper>\n          <SubTitle>Made With love by Dev-Potato</SubTitle>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n    hasMoreStories: hasMoreStoriesSelector(state),\n    stories: state.story.stories,\n    page: state.story.page,\n    storyIds: state.story.storyIds,\n    isFetching: state.story.isFetching,\n  });\n  \n  \n  const mapDispatchToProps = dispatch => ({\n    fetchStories: ({ storyIds, page }) => dispatch(actions.fetchStories({storyIds, page})),\n    fetchStoriesFirstPage: () => dispatch(actions.fetchStoryIds()),\n  });\n  \n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(App);\n\n","import { injectGlobal } from 'styled-components';\nimport { colorsDark } from './palette';\n\nconst setGlobalStyles = () => {\n    injectGlobal`\n    * {\n        box-sizing: border-box;\n    }\n\n    html, body {\n        font-family: Lato, Helvetica-Neue, Helvetica, Arial, sans-serif;\n        width: 100vw;\n        min-heigh: 100vh;\n        overflow-x: hidden;\n        margin: 0;\n        padding: 0;\n        background-color: ${colorsDark.background};\n    }\n\n    ul {\n        list-style: none;\n        padding: 0;\n    }\n\n    a {\n        text-decoration: none;\n        \n        &visited {\n            color: inherit;\n        }\n    }\n    `\n}\nexport default setGlobalStyles;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const NS = '@hnReader/app';\n\nexport const actionTypes = {\n    SET_THEME: `${NS}/SET_THEME`,\n};\n\nconst actions = {\n    setTheme: (payload = {})=> ({type: actionTypes.SET_THEME, payload}),\n}\n\nexport default actions;","import { actionTypes } from './actions';\n\nconst getInitalState = () => ({\n    theme: 'dark,'\n});\n\nconst app = (state = getInitalState(), {type, payload}) => {\n    switch(type) {\n        case actionTypes.SET_THEME:\n            return {\n                ...state,\n                ...payload\n            }\n        default:\n            return state;\n    }\n};\n\nexport default app;","import { actionTypes } from './actions';\n\nconst getInitialState = () => ({\n    storyIds: [],\n    stories: [],\n    page: 0,\n    isFetching: false,\n    error: '',\n});\n\nconst story = (state = getInitialState(), { type, payload }) => {\n    switch(type) {\n        case actionTypes.FETCH_STORY_IDS_REQUEST:\n        case actionTypes.FETCH_STORIES_REQUEST:\n            return {\n                ...state,\n                isFetching: true,\n            };\n            case actionTypes.FETCH_STORY_IDS_SUCCESS:\n                return {\n                    ...state,\n                    ...payload,\n                };\n            case actionTypes.FETCH_STORIES_SUCCESS:\n                return {\n                    ...state,\n                    stories: [...state.stories, ...payload.stories],\n                    page: state.page + 1,\n                    isFetching: false,\n                };    \n            default:\n                return state;\n    }\n};\n\nexport default story;","import { combineReducers } from 'redux';\nimport app from './app/reducer';\nimport story from './story/reducer';\n\nconst rootReducer = combineReducers({\n    app,\n    story,\n});\n\nexport default rootReducer;","import { applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\n\nconst isProd = process.env.NODE_ENV === 'production';\nconst middlewareList = [];\n\nmiddlewareList.push(thunk);\n  if (!isProd) {\n    middlewareList.push(createLogger());\n}\n\nconst middleware = compose(applyMiddleware(...middlewareList));\n\nexport default middleware;","import {createStore} from 'redux';\nimport reducer from './reducer';\nimport middleware from './middlewares'\n\nconst configureStore = initialState => {\n    const store = createStore(reducer, initialState, middleware);\n    return store;\n}\n\nexport default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport setGlobalStyles from 'styles/globals';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport configureStore from './store/index';\n// import loadInitialState from './store/middleware/localStorageMiddleware/loadInitialState';\n\nsetGlobalStyles();\n\nconst renderApp = () => {\n    const initialState = {};\n    const store = configureStore(initialState);\n\n    store.dispatch({ type: '@hn/@@INIT' });\n\n    ReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n    );\n}\n\nrenderApp();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}